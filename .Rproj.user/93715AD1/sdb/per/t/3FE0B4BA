{
    "collab_server" : "",
    "contents" : "library(XLConnect)\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggthemes)\nlibrary(tidyr)\n\nwb <- loadWorkbook(\"Data/facilitation.scale.review.xlsx\")\n\n#chi-squared tests: expected value 8.81 \ndata <- readWorksheet(wb, \"ecosystems.double\", header = TRUE)\neco_counts <- count(data, eco.simp)\nc1 <- chisq.test(eco_counts$n)\nc1\neco_counts <- mutate(eco_counts, proportion = n/sum(eco_counts$n))\n\nmain <- readWorksheet(wb, \"final.data\", header = TRUE)\n\ntheme_counts <- count(main, theme.simp)\nc.theme <- chisq.test(theme_counts$n)\nc.theme\ntheme_counts <- mutate(theme_counts, proportion = n/sum(theme_counts$n))\ncount(main, method)\n\n\n#hypotheses\ncounts <- gather(main, \"Mechanism\", \"Count\", floral.neighbourhood:sequential)\ncounts <- filter(counts, Count == 1 )\nhypo_count <- count(counts, Mechanism)\nc2 <- chisq.test(hypo_count$n)\nc2\n\n#testing multiple mechanisms at once\nmain <- mutate(main, mech.count = floral.neighbourhood + density + magnet + mimic + habitat + sequential + diversity)\ncount(main, mech.count)\n\n\n#lm for citations\ncitations <- count(main, Year) # %>% left_join(.,main, by = \"Year\")\n\nm1 <- lm(log(citations$n) ~ citations$Year)\nm2 <- lm(citations$n ~ citations$Year)\nsummary(m1)\nsummary(m2)\n\n#how did they track reproductive success\ncount(main, observation)\ncount(main, seeds)\ncount(main, fruits)\ncount(main, pollen)\n\n\n#scale results - are double coded for grain info\n\nmulti.grains <- readWorksheet(wb, \"multi\", header = TRUE)\n#grain and extent wrangling then scatterplot\ngrains<- filter(main, multiple.scales == \"N\")\n#multi <- filter(main, multiple.scales == \"Y\")\n#writeWorksheet(wb, multi, \"multi.scale\")\n#saveWorkbook(wb, \"Data/facilitation.scale.review.xlsx\")\n\nall.grains <- rbind(multi.grains, grains)\nall.grains$grain.cat <- factor(all.grains$grain.cat, levels = c(\"small\", \"medium\", \"large\", \"verylarge\", \"NA\", \"NR\"))\ngrains$grain.cat <- factor(grains$grain.cat, levels = c(\"small\", \"medium\", \"large\", \"verylarge\", \"NA\", \"NR\"))\n\n\ngrain_count <- count(all.grains, grain.cat)\ngrain_count <- mutate(grain_count, proportion = n/sum(grain_count$n))\nc3 <- chisq.test(grain_count$n)\nc3\n\n#ugh ok to do mechanism by grain - much double counting\n#single scale studies only \ngrain.hypo.count <- gather(grains, \"Mechanism\", \"Count\", floral.neighbourhood:sequential)\ngrain.hypo.count <- filter(grain.hypo.count, Count == 1 )\n\nggplot(grain.hypo.count, aes(Mechanism, fill = grain.cat)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\nqtgrain <- count(all.grains, grain.qt)\n\n#not double coding for extent reporting however?\nextent_counts <- count(main, Report.True.Extent)\nextent_counts\nextent_counts <- mutate(extent_counts, proportion = n/sum(extent_counts$n))\ncount(main, Replicated.sites.)\ncount(main, Site.extent.)\nfilter(main, Replicated.sites. == \"Y\") %>% count(.,Site.extent.)\nfilter(main, Report.True.Extent == \"N\") %>% count(.,Site.extent.)\n#plain ecosystem bar chart\nggplot(data, aes(eco.simp)) + geom_bar() \n\n#ecosystems and scale\n\nggplot(data, aes(eco.simp, fill = rel.scale.ordinal)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(labels = c(\"Both\", \"Broad Scale\", \"Narrow Scale\"), palette=\"Greys\") + ylab(\"Number of Publications\") + xlab(\"Ecosystem Type\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8)) + guides(fill = guide_legend(reverse=TRUE, title=NULL)) \n\ncount(counts, theme.simp)\n# only plotting themes with 5 or greater papers? + multi-counted hypotheses\nthemes <- filter(counts, theme.simp != \"mating system\" & theme.simp !=\"diversity\" & theme.simp !=\"floral traits selection\" & theme.simp !=\"mechanical isolation\" & theme.simp !=\"niche theory\" & theme.simp !=\"pollination theory\")\n\n#not loving this one\nggplot(themes, aes(Mechanism, fill = theme.simp)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\nggplot(themes, aes(theme.simp, fill = Mechanism)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\nggplot(counts, aes(Mechanism, fill = rel.scale.ordinal)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\n#scale-dependent studies\nmulti.scale <- filter(main, multiple.scales == \"Y\")\nthemes <- filter(counts, theme.simp != \"mating system\" & theme.simp !=\"diversity\" & theme.simp !=\"floral traits selection\" & theme.simp !=\"mechanical isolation\" & theme.simp !=\"niche theory\" & theme.simp !=\"pollination theory\")\n\n\nggplot(multi.scale, aes(theme.simp)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\nggplot(multi.scale, aes(theme.simp, fill = scale.dependence)) + geom_bar(position = \"stack\", colour=\"black\") + theme_Publication() + scale_fill_brewer(palette=\"Greys\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8))\n\n\n+ ylab(\"Number of Publications\") + xlab(\"Ecosystem Type\") + theme(axis.text.x = element_text(angle = 90, hjust = 1), legend.position = c(0.1, 0.8)) + guides(fill = guide_legend(reverse=TRUE, title=NULL)) ",
    "created" : 1512775690352.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "718314272",
    "id" : "3FE0B4BA",
    "lastKnownWriteTime" : 1512666758,
    "last_content_update" : 1512666758,
    "path" : "F:/School/Systematic Review/FacilitationScaleReview/Scripts/stats.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}